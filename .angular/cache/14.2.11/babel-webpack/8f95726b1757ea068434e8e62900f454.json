{"ast":null,"code":"import _asyncToGenerator from \"D:/pCloudFolder/Repositories/Semester3/Angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest.datasource\";\nexport class ProductRepository {\n  //constructor\n  constructor(dataSource) {\n    this.dataSource = dataSource; //properties\n\n    this.products = [];\n    this.categories = [];\n    this.currentDate = new Date();\n    this.currentDateInt = Date.parse(this.currentDate.toString());\n    this.listReady = false;\n    this.setProduct();\n  }\n\n  belongsToThisSessionUser(product) {\n    return product.owner == this.dataSource.user_id;\n  } //Methods\n  //_CRUD\n  //__Read methods\n\n\n  getProducts(category = null) {\n    for (let i = 0; i < this.products.length; i++) {\n      if (this.products[i].expiryDate) {\n        this.expDateInt = Date.parse(this.products[i].expiryDate.toString());\n\n        if (this.expDateInt < this.currentDateInt) {\n          this.products[i].enable = false;\n        }\n      }\n    }\n\n    return this.products.filter(p => category == null || category == p.category).sort((a, b) => {\n      return a.title > b.title ? 1 : -1;\n    });\n  }\n\n  getProduct(id) {\n    return this.products.find(p => p._id == id);\n  }\n\n  setProduct() {\n    let aux = [];\n    this.listReady = false;\n    this.dataSource.getProducts().subscribe(data => {\n      for (let i = 0; i < data.length; i++) {\n        if (!data[i].enable && !this.belongsToThisSessionUser(data[i])) {\n          continue;\n        }\n\n        aux.push(data[i]);\n      }\n\n      this.products = aux;\n      this.categories = this.products.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n      this.listReady = true;\n    });\n  }\n\n  getCategories() {\n    return this.categories;\n  } //__Create and update method\n\n\n  saveProduct(product) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      //Create\n      if (product._id == null || product._id == \"\") {\n        _this.dataSource.saveProduct(product).subscribe(response => _this.products.push(response));\n\n        if (!_this.categories.includes(product.category)) {\n          _this.categories.push(product.category);\n        } //Update\n\n      } else {\n        _this.dataSource.updateProduct(product).subscribe(response => {\n          _this.products.splice(_this.products.findIndex(response => response._id == product._id), 1, product);\n        });\n      }\n    })();\n  } //__Question & Answer\n\n\n  sendQuestion(product) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.products.splice(_this2.products.findIndex(element => {\n        element._id == product._id;\n      }), 1, product); // console.log(\"Res: \" + product.questionAnswer[0].question);\n\n\n      _this2.dataSource.sendQuestion(product._id, product.questionAnswer[0].question).subscribe(response => {\n        console.log(\"repo message: \" + response.message);\n        console.log(\"repo success: \" + response.message);\n      });\n    })();\n  }\n\n  sendAnswer(product, questionId, answerText) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.products.splice(_this3.products.findIndex(element => {\n        element._id == product._id;\n      }), 1, product); // console.log(\"Res: \" + product.questionAnswer[0].question);\n\n\n      _this3.dataSource.sendAnswer(product._id, questionId, answerText).subscribe(response => {\n        console.log(\"repo message: \" + response.message);\n        console.log(\"repo success: \" + response.message);\n      });\n    })();\n  } //Delete\n\n\n  deleteProduct(id) {\n    this.dataSource.deleteProduct(id).subscribe(p => {\n      this.products.splice(this.products.findIndex(p => p._id == id), 1);\n      this.categories = this.products.map(p => p.category).filter((c, index, array) => array.indexOf(c) == index).sort();\n    });\n  }\n\n}\n\nProductRepository.ɵfac = function ProductRepository_Factory(t) {\n  return new (t || ProductRepository)(i0.ɵɵinject(i1.RestDataSource));\n};\n\nProductRepository.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductRepository,\n  factory: ProductRepository.ɵfac\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,iBAAP,CAAwB;EAS1B;EACAC,YAAoBC,UAApB,EAA8C;IAA1B,6BAA0B,CAT9C;;IACQ,gBAAsB,EAAtB;IACA,kBAAuB,EAAvB;IACA,mBAAoB,IAAIC,IAAJ,EAApB;IACA,sBAA0BA,IAAI,CAACC,KAAL,CAAW,KAAKC,WAAL,CAAiBC,QAAjB,EAAX,CAA1B;IAER,iBAAqB,KAArB;IAII,KAAKC,UAAL;EACH;;EAEDC,wBAAwB,CAACC,OAAD,EAAiB;IACrC,OAAQA,OAAO,CAACC,KAAR,IAAiB,KAAKR,UAAL,CAAgBS,OAAzC;EAEH,CAjByB,CAmB1B;EACA;EACA;;;EACAC,WAAW,CAACC,WAAmB,IAApB,EAAwB;IAE/B,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAE,KAAKC,QAAL,CAAcC,MAAhC,EAAwCF,CAAC,EAAzC,EAA4C;MACxC,IAAG,KAAKC,QAAL,CAAcD,CAAd,EAAiBG,UAApB,EAA+B;QAC3B,KAAKC,UAAL,GAAkBf,IAAI,CAACC,KAAL,CAAW,KAAKW,QAAL,CAAcD,CAAd,EAAiBG,UAAjB,CAA4BX,QAA5B,EAAX,CAAlB;;QACA,IAAG,KAAKY,UAAL,GAAkB,KAAKC,cAA1B,EAAyC;UACrC,KAAKJ,QAAL,CAAcD,CAAd,EAAiBM,MAAjB,GAA0B,KAA1B;QACH;MACJ;IAEJ;;IAED,OAAO,KAAKL,QAAL,CACFM,MADE,CACKC,CAAC,IAAIT,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,IAAIS,CAAC,CAACT,QAD5C,EAEFU,IAFE,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAAS;MAAC,OAAQD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAqB,CAArB,GAAyB,CAAC,CAAjC;IAAoC,CAFjD,CAAP;EAGH;;EACDC,UAAU,CAACC,EAAD,EAAW;IACjB,OAAO,KAAKb,QAAL,CAAcc,IAAd,CAAmBP,CAAC,IAAIA,CAAC,CAACQ,GAAF,IAASF,EAAjC,CAAP;EACH;;EAEDrB,UAAU;IACN,IAAIwB,GAAG,GAAc,EAArB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAK9B,UAAL,CAAgBU,WAAhB,GAA8BqB,SAA9B,CAAwCC,IAAI,IAAG;MAC3C,KAAI,IAAIpB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGoB,IAAI,CAAClB,MAAxB,EAAgCF,CAAC,EAAjC,EAAqC;QACjC,IAAG,CAACoB,IAAI,CAACpB,CAAD,CAAJ,CAAQM,MAAT,IAAmB,CAAC,KAAKZ,wBAAL,CAA8B0B,IAAI,CAACpB,CAAD,CAAlC,CAAvB,EAA8D;UAC1D;QACH;;QACDiB,GAAG,CAACI,IAAJ,CAASD,IAAI,CAACpB,CAAD,CAAb;MACH;;MACD,KAAKC,QAAL,GAAgBgB,GAAhB;MACA,KAAKK,UAAL,GAAkB,KAAKrB,QAAL,CAAcsB,GAAd,CAAkBf,CAAC,IAAIA,CAAC,CAACT,QAAzB,EACbQ,MADa,CACN,CAACiB,CAAD,EAAIC,KAAJ,EAAWC,KAAX,KAAqBA,KAAK,CAACC,OAAN,CAAcH,CAAd,KAAoBC,KADnC,EAC0ChB,IAD1C,EAAlB;MAGA,KAAKS,SAAL,GAAiB,IAAjB;IACH,CAZD;EAaH;;EAEDU,aAAa;IACT,OAAO,KAAKN,UAAZ;EACH,CA9DyB,CA+D1B;;;EACMO,WAAW,CAAClC,OAAD,EAAiB;IAAA;;IAAA;MAC9B;MACA,IAAIA,OAAO,CAACqB,GAAR,IAAe,IAAf,IAAuBrB,OAAO,CAACqB,GAAR,IAAe,EAA1C,EAA8C;QAC1C,KAAI,CAAC5B,UAAL,CAAgByC,WAAhB,CAA4BlC,OAA5B,EACKwB,SADL,CACeW,QAAQ,IAAI,KAAI,CAAC7B,QAAL,CAAcoB,IAAd,CAAmBS,QAAnB,CAD3B;;QAEI,IAAG,CAAC,KAAI,CAACR,UAAL,CAAgBS,QAAhB,CAAyBpC,OAAO,CAACI,QAAjC,CAAJ,EAA+C;UAC3C,KAAI,CAACuB,UAAL,CAAgBD,IAAhB,CAAqB1B,OAAO,CAACI,QAA7B;QACH,CALqC,CAM9C;;MACC,CAPD,MAOO;QACH,KAAI,CAACX,UAAL,CAAgB4C,aAAhB,CAA8BrC,OAA9B,EACKwB,SADL,CACeW,QAAQ,IAAG;UAClB,KAAI,CAAC7B,QAAL,CAAcgC,MAAd,CAAqB,KAAI,CAAChC,QAAL,CACjBiC,SADiB,CACPJ,QAAQ,IAAIA,QAAQ,CAACd,GAAT,IAAgBrB,OAAO,CAACqB,GAD7B,CAArB,EACwD,CADxD,EAC2DrB,OAD3D;QAEH,CAJL;MAKH;IAf6B;EAgBjC,CAhFyB,CAkF1B;;;EACMwC,YAAY,CAACxC,OAAD,EAAiB;IAAA;;IAAA;MAC/B,MAAI,CAACM,QAAL,CAAcgC,MAAd,CAAqB,MAAI,CAAChC,QAAL,CAAciC,SAAd,CAAyBE,OAAD,IAAW;QAACA,OAAO,CAACpB,GAAR,IAAerB,OAAO,CAACqB,GAAvB;MAA2B,CAA/D,CAArB,EAAuF,CAAvF,EAA0FrB,OAA1F,EAD+B,CAE/B;;;MACA,MAAI,CAACP,UAAL,CAAgB+C,YAAhB,CAA6BxC,OAAO,CAACqB,GAArC,EAA0CrB,OAAO,CAAC0C,cAAR,CAAuB,CAAvB,EAA0BC,QAApE,EACKnB,SADL,CACeW,QAAQ,IAAG;QAClBS,OAAO,CAACC,GAAR,CAAY,mBAAmBV,QAAQ,CAACW,OAAxC;QACAF,OAAO,CAACC,GAAR,CAAY,mBAAmBV,QAAQ,CAACW,OAAxC;MACH,CAJL;IAH+B;EAQlC;;EACKC,UAAU,CAAC/C,OAAD,EAAmBgD,UAAnB,EAAuCC,UAAvC,EAAyD;IAAA;;IAAA;MACrE,MAAI,CAAC3C,QAAL,CAAcgC,MAAd,CAAqB,MAAI,CAAChC,QAAL,CAAciC,SAAd,CAAyBE,OAAD,IAAW;QAACA,OAAO,CAACpB,GAAR,IAAerB,OAAO,CAACqB,GAAvB;MAA2B,CAA/D,CAArB,EAAuF,CAAvF,EAA0FrB,OAA1F,EADqE,CAErE;;;MACA,MAAI,CAACP,UAAL,CAAgBsD,UAAhB,CAA2B/C,OAAO,CAACqB,GAAnC,EAAwC2B,UAAxC,EAAoDC,UAApD,EACKzB,SADL,CACeW,QAAQ,IAAG;QAClBS,OAAO,CAACC,GAAR,CAAY,mBAAmBV,QAAQ,CAACW,OAAxC;QACAF,OAAO,CAACC,GAAR,CAAY,mBAAmBV,QAAQ,CAACW,OAAxC;MACH,CAJL;IAHqE;EAQxE,CApGyB,CAqG1B;;;EACAI,aAAa,CAAC/B,EAAD,EAAW;IACpB,KAAK1B,UAAL,CAAgByD,aAAhB,CAA8B/B,EAA9B,EAAkCK,SAAlC,CAA4CX,CAAC,IAAG;MAC5C,KAAKP,QAAL,CAAcgC,MAAd,CAAqB,KAAKhC,QAAL,CACjBiC,SADiB,CACP1B,CAAC,IAAIA,CAAC,CAACQ,GAAF,IAASF,EADP,CAArB,EACiC,CADjC;MAEA,KAAKQ,UAAL,GAAkB,KAAKrB,QAAL,CAAcsB,GAAd,CAAkBf,CAAC,IAAIA,CAAC,CAACT,QAAzB,EACbQ,MADa,CACN,CAACiB,CAAD,EAAIC,KAAJ,EAAWC,KAAX,KAAqBA,KAAK,CAACC,OAAN,CAAcH,CAAd,KAAoBC,KADnC,EAC0ChB,IAD1C,EAAlB;IAEH,CALD;EAMH;;AA7GyB;;;mBAAjBvB,mBAAiB4D;AAAA;;;SAAjB5D;EAAiB6D,SAAjB7D,iBAAiB","names":["ProductRepository","constructor","dataSource","Date","parse","currentDate","toString","setProduct","belongsToThisSessionUser","product","owner","user_id","getProducts","category","i","products","length","expiryDate","expDateInt","currentDateInt","enable","filter","p","sort","a","b","title","getProduct","id","find","_id","aux","listReady","subscribe","data","push","categories","map","c","index","array","indexOf","getCategories","saveProduct","response","includes","updateProduct","splice","findIndex","sendQuestion","element","questionAnswer","question","console","log","message","sendAnswer","questionId","answerText","deleteProduct","i0","factory"],"sourceRoot":"","sources":["D:\\pCloudFolder\\Repositories\\Semester3\\Angular\\src\\app\\model\\product.repository.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from \"./product.model\";\r\nimport { RestDataSource } from \"./rest.datasource\";\r\nimport { ResponseModel } from \"./response.model\";\r\n\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n    //properties\r\n    private products: Product[] = [];\r\n    private categories: string[] = [];\r\n    private currentDate: Date = new Date();\r\n    private currentDateInt : number = Date.parse(this.currentDate.toString())\r\n    private expDateInt: number;\r\n    listReady: boolean = false;\r\n\r\n    //constructor\r\n    constructor(private dataSource: RestDataSource) {\r\n        this.setProduct();\r\n    }\r\n\r\n    belongsToThisSessionUser(product: Product): boolean {\r\n        return (product.owner == this.dataSource.user_id);\r\n\r\n    }\r\n\r\n    //Methods\r\n    //_CRUD\r\n    //__Read methods\r\n    getProducts(category: string = null): Product[] {\r\n\r\n        for(let i = 0; i< this.products.length; i++){\r\n            if(this.products[i].expiryDate){\r\n                this.expDateInt = Date.parse(this.products[i].expiryDate.toString());\r\n                if(this.expDateInt < this.currentDateInt){\r\n                    this.products[i].enable = false;\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        return this.products\r\n            .filter(p => category == null || category == p.category)\r\n            .sort((a, b) =>{return (a.title > b.title)? 1 : -1;});\r\n    }\r\n    getProduct(id: string): Product {\r\n        return this.products.find(p => p._id == id);\r\n    }\r\n\r\n    setProduct(){\r\n        let aux: Product[] = [];\r\n        this.listReady = false;\r\n        this.dataSource.getProducts().subscribe(data => {\r\n            for(let i = 0; i < data.length; i++ ){\r\n                if(!data[i].enable && !this.belongsToThisSessionUser(data[i])){\r\n                    continue;\r\n                }\r\n                aux.push(data[i]);\r\n            }\r\n            this.products = aux;\r\n            this.categories = this.products.map(p => p.category)\r\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\r\n\r\n            this.listReady = true;\r\n        });\r\n    }\r\n\r\n    getCategories(): string[] {\r\n        return this.categories;\r\n    }\r\n    //__Create and update method\r\n    async saveProduct(product: Product) {\r\n        //Create\r\n        if (product._id == null || product._id == \"\") {\r\n            this.dataSource.saveProduct(product)\r\n                .subscribe(response => this.products.push(response));\r\n                if(!this.categories.includes(product.category)){\r\n                    this.categories.push(product.category);\r\n                }\r\n        //Update\r\n        } else {\r\n            this.dataSource.updateProduct(product)\r\n                .subscribe(response => {\r\n                    this.products.splice(this.products.\r\n                        findIndex(response => response._id == product._id), 1, product);\r\n                });\r\n        }\r\n    }\r\n\r\n    //__Question & Answer\r\n    async sendQuestion(product: Product) {\r\n        this.products.splice(this.products.findIndex((element)=>{element._id == product._id}), 1, product);\r\n        // console.log(\"Res: \" + product.questionAnswer[0].question);\r\n        this.dataSource.sendQuestion(product._id, product.questionAnswer[0].question)\r\n            .subscribe(response => {\r\n                console.log(\"repo message: \" + response.message);\r\n                console.log(\"repo success: \" + response.message);\r\n            });\r\n    }\r\n    async sendAnswer(product: Product, questionId: string, answerText: string) {\r\n        this.products.splice(this.products.findIndex((element)=>{element._id == product._id}), 1, product);\r\n        // console.log(\"Res: \" + product.questionAnswer[0].question);\r\n        this.dataSource.sendAnswer(product._id, questionId, answerText)\r\n            .subscribe(response => {\r\n                console.log(\"repo message: \" + response.message);\r\n                console.log(\"repo success: \" + response.message);\r\n            });\r\n    }\r\n    //Delete\r\n    deleteProduct(id: string) {\r\n        this.dataSource.deleteProduct(id).subscribe(p => {\r\n            this.products.splice(this.products.\r\n                findIndex(p => p._id == id), 1);\r\n            this.categories = this.products.map(p => p.category)\r\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\r\n        })\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}